MediaWiki (the wiki we use) has a web API: http://www.mediawiki.org/wiki/API:Main_page
Found a Ruby gem for it (https://github.com/jpatokal/mediawiki-gateway), but the latest version on rubygems.org
fails to install; seems to depend on itself!?!

$ gem install mediawiki-gateway -v 0.5.2
ERROR:  Error installing mediawiki-gateway:
  mediawiki-gateway requires mediawiki-gateway (>= 0)

So use the next-to-last version which doesn't have that weird dependency:
$ gem install mediawiki-gateway -v 0.5.1

Has a pretty easy api to create and edit pages
(but don't try this as-is since it will change the AG release page and create a new page; our wiki is configured such that pages can't be deleted):

  require 'media_wiki'

  WIKI_API_URI = 'http://wiki/api.php'
  USERNAME = 'sbrauer'
  PASSWORD = '$ecret'
  AUTH_DOMAIN   = 'PRM'

  mw = MediaWiki::Gateway.new(WIKI_API_URI)
  mw.login(USERNAME, PASSWORD, AUTH_DOMAIN)

  mw.create('IDG/Releases/Web/ApartmentGuide/20130704', 'Hello world!')
  content = mw.get('IDG/Releases/Web/ApartmentGuide')
  mw.edit('IDG/Releases/Web/ApartmentGuide', 'New stuff!!!\n' + content)

After reviewing qa_release_tasks gem, my plan is as follows:

Extend qa:release:wiki task such that after its current behavior of
prompting for start and end tag, it also prompts for:
- Wiki username
- Wiki password
- Release date (default to today; use "yyyy-mm-dd" format)
  Note: consider updating #ask in cli.rb such that valid_response may be Date
    In that case, call Date.parse(answer) and rescue ArgumentError for invalid date

Prompt for user/pass first and login to wiki
Exit w/ error if login fails
Confirm that index page exists; exit w/ error if it doesn't
Then prompt for date and start/end tags
Once all input has been collected:
- create new page
  - generate content for new page
  - add new page to wiki
  - print to stdout: "Created new release page: url"
- add link to index page
  - get current page content
  - generate wiki link markup for new page
  - if a list exists, insert link as new first list item
  - else insert link at top of content
  - print to stdout: "Updated release listing page: url"
